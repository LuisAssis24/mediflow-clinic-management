/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inter.face;
import java.sql.*;
import javax.swing.*;
import sql.server.*;
import medi.flow.Main;

import java.text.*;
import java.util.*;
import java.util.Date;

/**
 *
 * @author Luis
 */
public class VistaFuncionario extends javax.swing.JFrame {
    //ArrayList<> consultas = new ArrayList<Consulta>();
    /**
     * Creates new form VistaBase
     */
    public VistaFuncionario() {
        initComponents(); // Inicializa os componentes da interface
        carregarConsultasBaseDeDados(); // Carrega as consultas da base de dados
    }

    void carregarConsultasBaseDeDados() {
        consultasPanel.removeAll(); // Limpa o painel para evitar duplicações

        // Obtem os IDs das consultas da base de dados
        List<Integer> consultaIds = SqlGeral.obterTodasConsultas(); // Fetch consultation IDs from the database
        int tamanhoPainelConsultas = 0; // Variavel para controlar o tamanho do painel de consultas

        // Itera sobre cada ID de consulta para carregar os dados associados
        for (int idConsulta : consultaIds) {
            // Obtem os dados da consulta em forma de HashMap com chave/valor
            HashMap<String, String> dadosConsulta = SqlGeral.dadosConsulta(idConsulta); 
            
            // Ajusta o tamanho do painel de consultas
            tamanhoPainelConsultas += 100;
            consultasPanel.setPreferredSize(new java.awt.Dimension(960, tamanhoPainelConsultas));
            criarPainelConsulta(dadosConsulta);  // Cria e adiciona o painel da consulta ao paienl principal
        }

        // Move a barra de scroll para o topo do painel de consultas
        SwingUtilities.invokeLater(() -> {
            JScrollBar verticalScrollBar = jScrollPane1.getVerticalScrollBar();
            verticalScrollBar.setValue(verticalScrollBar.getMinimum());
        });

        // Atualiza a interface gráfica para refletir as mudanças
        consultasPanel.revalidate();
        consultasPanel.repaint();
    }

    void criarPainelConsulta(HashMap<String, String> dadosConsulta) {
        // Cria um painel de consulta com os dados fornecidos 
        ConsultaFuncionario consulta = new ConsultaFuncionario(dadosConsulta);
        consultasPanel.add(consulta); // Adiciona o painel criado ao painel principal de consultas
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        botaoPesquisa = new javax.swing.JButton();
        barraPesquisa = new javax.swing.JTextField();
        botaoVerConsultas = new javax.swing.JButton();
        botaoMarcarConsultas = new javax.swing.JButton();
        marcarConsultas = new javax.swing.JLayeredPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        nomePaciente = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        contactoPaciente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nSns = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        motivoConsulta = new javax.swing.JTextArea();
        motivoConsulta.setLineWrap(true);
        motivoConsulta.setWrapStyleWord(true);
        jLabel8 = new javax.swing.JLabel();
        dataConsulta = new javax.swing.JFormattedTextField();
        botaoMarcar = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        horaConsulta = new javax.swing.JFormattedTextField();
        botaoDisponibilidade = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        idMedico = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        salaConsulta = new javax.swing.JTextField();
        botaoPacientes = new javax.swing.JButton();
        verConsultas = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        consultasPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBackground(new java.awt.Color(0, 149, 218));
        jPanel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 12)); // NOI18N
        jPanel1.setMinimumSize(new java.awt.Dimension(1080, 60));
        jPanel1.setPreferredSize(new java.awt.Dimension(1080, 60));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("MediFlow");
        jLabel1.setMaximumSize(new java.awt.Dimension(250, 25));
        jLabel1.setPreferredSize(new java.awt.Dimension(140, 60));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 900);
        jPanel1.add(jLabel1, gridBagConstraints);

        getContentPane().add(jPanel1, new java.awt.GridBagConstraints());

        jPanel3.setMinimumSize(new java.awt.Dimension(1080, 660));
        jPanel3.setPreferredSize(new java.awt.Dimension(1080, 660));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBackground(new java.awt.Color(0, 149, 218));
        jPanel7.setPreferredSize(new java.awt.Dimension(960, 50));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        botaoPesquisa.setBackground(new java.awt.Color(0, 132, 193));
        botaoPesquisa.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoPesquisa.setForeground(new java.awt.Color(242, 242, 242));
        botaoPesquisa.setText("PESQUISAR");
        botaoPesquisa.setMaximumSize(new java.awt.Dimension(120, 35));
        botaoPesquisa.setMinimumSize(new java.awt.Dimension(120, 35));
        botaoPesquisa.setPreferredSize(new java.awt.Dimension(140, 35));
        botaoPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPesquisaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 80);
        jPanel7.add(botaoPesquisa, gridBagConstraints);

        barraPesquisa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        barraPesquisa.setText("Pesquisar...");
        barraPesquisa.setMinimumSize(new java.awt.Dimension(350, 35));
        barraPesquisa.setPreferredSize(new java.awt.Dimension(350, 35));
        barraPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                barraPesquisaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 20);
        jPanel7.add(barraPesquisa, gridBagConstraints);

        botaoVerConsultas.setBackground(new java.awt.Color(0, 132, 193));
        botaoVerConsultas.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoVerConsultas.setForeground(new java.awt.Color(242, 242, 242));
        botaoVerConsultas.setText("Ver Consultas");
        botaoVerConsultas.setMaximumSize(new java.awt.Dimension(140, 35));
        botaoVerConsultas.setMinimumSize(new java.awt.Dimension(140, 35));
        botaoVerConsultas.setPreferredSize(new java.awt.Dimension(140, 35));
        botaoVerConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVerConsultasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel7.add(botaoVerConsultas, gridBagConstraints);

        botaoMarcarConsultas.setBackground(new java.awt.Color(0, 132, 193));
        botaoMarcarConsultas.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoMarcarConsultas.setForeground(new java.awt.Color(242, 242, 242));
        botaoMarcarConsultas.setText("Marcar Consulta");
        botaoMarcarConsultas.setMaximumSize(new java.awt.Dimension(140, 35));
        botaoMarcarConsultas.setMinimumSize(new java.awt.Dimension(140, 35));
        botaoMarcarConsultas.setPreferredSize(new java.awt.Dimension(140, 35));
        botaoMarcarConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMarcarConsultasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel7.add(botaoMarcarConsultas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel3.add(jPanel7, gridBagConstraints);

        marcarConsultas.setBackground(new java.awt.Color(0, 149, 218));
        marcarConsultas.setMinimumSize(new java.awt.Dimension(960, 550));
        marcarConsultas.setOpaque(true);
        marcarConsultas.setVisible(false);
        marcarConsultas.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(new java.awt.Color(0, 149, 218));
        jPanel2.setMinimumSize(new java.awt.Dimension(960, 550));
        jPanel2.setPreferredSize(new java.awt.Dimension(960, 550));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(242, 242, 242));
        jLabel2.setText("DADOS DO PACIENTE");
        jLabel2.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel2.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel2.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 250);
        jPanel2.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(242, 242, 242));
        jLabel3.setText("Nome Completo:");
        jLabel3.setMaximumSize(new java.awt.Dimension(450, 30));
        jLabel3.setMinimumSize(new java.awt.Dimension(450, 30));
        jLabel3.setPreferredSize(new java.awt.Dimension(450, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel2.add(jLabel3, gridBagConstraints);

        nomePaciente.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        nomePaciente.setMaximumSize(new java.awt.Dimension(450, 30));
        nomePaciente.setMinimumSize(new java.awt.Dimension(450, 30));
        nomePaciente.setPreferredSize(new java.awt.Dimension(450, 30));
        nomePaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomePacienteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel2.add(nomePaciente, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(242, 242, 242));
        jLabel4.setText("N.º SNS:");
        jLabel4.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel4.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel4.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 250);
        jPanel2.add(jLabel4, gridBagConstraints);

        contactoPaciente.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        contactoPaciente.setMaximumSize(new java.awt.Dimension(200, 30));
        contactoPaciente.setMinimumSize(new java.awt.Dimension(200, 30));
        contactoPaciente.setPreferredSize(new java.awt.Dimension(200, 30));
        contactoPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactoPacienteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 250, 0, 0);
        jPanel2.add(contactoPaciente, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(242, 242, 242));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Contacto:");
        jLabel5.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel5.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel5.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 250, 0, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        nSns.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        nSns.setMaximumSize(new java.awt.Dimension(200, 30));
        nSns.setMinimumSize(new java.awt.Dimension(200, 30));
        nSns.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 250);
        jPanel2.add(nSns, gridBagConstraints);

        jLabel6.setFont(new java.awt.Font("Yu Gothic UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(242, 242, 242));
        jLabel6.setText("DADOS DA CONSULTA");
        jLabel6.setMaximumSize(new java.awt.Dimension(450, 30));
        jLabel6.setMinimumSize(new java.awt.Dimension(450, 30));
        jLabel6.setPreferredSize(new java.awt.Dimension(450, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(242, 242, 242));
        jLabel7.setText("Motivo:");
        jLabel7.setMaximumSize(new java.awt.Dimension(150, 30));
        jLabel7.setMinimumSize(new java.awt.Dimension(150, 30));
        jLabel7.setPreferredSize(new java.awt.Dimension(150, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 300);
        jPanel2.add(jLabel7, gridBagConstraints);

        motivoConsulta.setColumns(20);
        motivoConsulta.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        motivoConsulta.setRows(5);
        motivoConsulta.setMinimumSize(new java.awt.Dimension(300, 200));
        motivoConsulta.setPreferredSize(new java.awt.Dimension(450, 100));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        jPanel2.add(motivoConsulta, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setText("Data:");
        jLabel8.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel8.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel8.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 250);
        jPanel2.add(jLabel8, gridBagConstraints);

        dataConsulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        dataConsulta.setMaximumSize(new java.awt.Dimension(200, 30));
        dataConsulta.setMinimumSize(new java.awt.Dimension(200, 30));
        dataConsulta.setPreferredSize(new java.awt.Dimension(200, 30));
        dataConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataConsultaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 250);
        jPanel2.add(dataConsulta, gridBagConstraints);

        botaoMarcar.setBackground(new java.awt.Color(0, 132, 193));
        botaoMarcar.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoMarcar.setForeground(new java.awt.Color(242, 242, 242));
        botaoMarcar.setText("MARCAR");
        botaoMarcar.setMaximumSize(new java.awt.Dimension(150, 35));
        botaoMarcar.setMinimumSize(new java.awt.Dimension(150, 35));
        botaoMarcar.setPreferredSize(new java.awt.Dimension(150, 35));
        botaoMarcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoMarcarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanel2.add(botaoMarcar, gridBagConstraints);

        label.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        label.setForeground(new java.awt.Color(242, 242, 242));
        label.setText("Hora:");
        label.setMaximumSize(new java.awt.Dimension(200, 30));
        label.setMinimumSize(new java.awt.Dimension(200, 30));
        label.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(0, 250, 0, 0);
        jPanel2.add(label, gridBagConstraints);

        horaConsulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        horaConsulta.setMaximumSize(new java.awt.Dimension(200, 30));
        horaConsulta.setMinimumSize(new java.awt.Dimension(200, 30));
        horaConsulta.setPreferredSize(new java.awt.Dimension(200, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 250, 0, 0);
        jPanel2.add(horaConsulta, gridBagConstraints);

        botaoDisponibilidade.setBackground(new java.awt.Color(0, 132, 193));
        botaoDisponibilidade.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoDisponibilidade.setForeground(new java.awt.Color(242, 242, 242));
        botaoDisponibilidade.setText("DISPONIBILIDADE ");
        botaoDisponibilidade.setMaximumSize(new java.awt.Dimension(150, 35));
        botaoDisponibilidade.setMinimumSize(new java.awt.Dimension(150, 35));
        botaoDisponibilidade.setPreferredSize(new java.awt.Dimension(150, 35));
        botaoDisponibilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoDisponibilidadeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 0, 0, 0);
        jPanel2.add(botaoDisponibilidade, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(242, 242, 242));
        jLabel9.setText("ID do Médico:");
        jLabel9.setMaximumSize(new java.awt.Dimension(200, 30));
        jLabel9.setMinimumSize(new java.awt.Dimension(200, 30));
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 350);
        jPanel2.add(jLabel9, gridBagConstraints);

        idMedico.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        idMedico.setMaximumSize(new java.awt.Dimension(200, 30));
        idMedico.setMinimumSize(new java.awt.Dimension(200, 30));
        idMedico.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 150);
        jPanel2.add(idMedico, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(242, 242, 242));
        jLabel10.setText("Sala:");
        jLabel10.setToolTipText("");
        jLabel10.setMaximumSize(new java.awt.Dimension(40, 30));
        jLabel10.setMinimumSize(new java.awt.Dimension(40, 30));
        jLabel10.setPreferredSize(new java.awt.Dimension(40, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(15, 90, 0, 0);
        jPanel2.add(jLabel10, gridBagConstraints);

        salaConsulta.setMaximumSize(new java.awt.Dimension(100, 30));
        salaConsulta.setMinimumSize(new java.awt.Dimension(100, 30));
        salaConsulta.setPreferredSize(new java.awt.Dimension(100, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(15, 230, 0, 0);
        jPanel2.add(salaConsulta, gridBagConstraints);

        botaoPacientes.setBackground(new java.awt.Color(0, 132, 193));
        botaoPacientes.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoPacientes.setForeground(new java.awt.Color(242, 242, 242));
        botaoPacientes.setText("Procurar Paciente");
        botaoPacientes.setMaximumSize(new java.awt.Dimension(150, 35));
        botaoPacientes.setMinimumSize(new java.awt.Dimension(150, 35));
        botaoPacientes.setPreferredSize(new java.awt.Dimension(150, 35));
        botaoPacientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoPacientesActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 300, 0, 0);
        jPanel2.add(botaoPacientes, gridBagConstraints);

        marcarConsultas.add(jPanel2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(marcarConsultas, gridBagConstraints);

        verConsultas.setBackground(new java.awt.Color(0, 149, 218));
        verConsultas.setMinimumSize(new java.awt.Dimension(960, 35));
        verConsultas.setOpaque(true);
        verConsultas.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(960, 550));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(960, 550));

        consultasPanel.setMinimumSize(new java.awt.Dimension(900, 0));
        consultasPanel.setPreferredSize(new java.awt.Dimension(900, 0));
        consultasPanel.setLayout(new java.awt.GridLayout(0, 1, 10, 10));
        jScrollPane1.setViewportView(consultasPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        verConsultas.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel3.add(verConsultas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void barraPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_barraPesquisaActionPerformed
        
    }//GEN-LAST:event_barraPesquisaActionPerformed

    private void botaoVerConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVerConsultasActionPerformed

        // Verifica se o painel "verConsultas" está oculto
        if (verConsultas.isVisible() == false){
            barraPesquisa.setVisible(true);
            botaoPesquisa.setVisible(true);
            verConsultas.setVisible(true);
            marcarConsultas.setVisible(false);
        }
        // Recarrega as consultas da base de dados
        carregarConsultasBaseDeDados();
    }//GEN-LAST:event_botaoVerConsultasActionPerformed

    private void botaoMarcarConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoMarcarConsultasActionPerformed
        // Verifica se o painel "marcarConsultas" está oculto
        if (marcarConsultas.isVisible() == false){
            barraPesquisa.setVisible(false);
            botaoPesquisa.setVisible(false);
            marcarConsultas.setVisible(true);
            verConsultas.setVisible(false);
            nomePaciente.setText("");
            contactoPaciente.setText("");
            nSns.setText("");
            motivoConsulta.setText("");
            dataConsulta.setText("");
            horaConsulta.setText("");
            idMedico.setText("");
        } // TODO add your handling code here:
    }//GEN-LAST:event_botaoMarcarConsultasActionPerformed

    private void botaoPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPesquisaActionPerformed
        String inputSNS = barraPesquisa.getText().trim(); // Obtem o texto da barra de pesquisa

        // Verifica se o campo de pesquisa está vazio
        if (inputSNS == null || inputSNS.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira um número de SNS.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Verifica se o valor inserido contém apenas numeros
        if (!inputSNS.matches("\\d+")) {
            JOptionPane.showMessageDialog(this, "Por favor, insira apenas números.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            int snsPaciente = Integer.parseInt(inputSNS); // Converte o texto em um numero inteiro
            System.out.println("Pesquisando consulta para SNS: " + snsPaciente);

            // Realiza a busca na base de dados
            HashMap<String, String> dadosConsulta = SqlFuncionario.procurarConsultaPorSNS(snsPaciente);

            consultasPanel.removeAll(); // Limpa o painel de consultas

            // Verifica se há resultados
            if (dadosConsulta.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Consulta não encontrada!", "Informação", JOptionPane.INFORMATION_MESSAGE);
            } else {
                ConsultaFuncionario consulta = new ConsultaFuncionario(dadosConsulta);
                consultasPanel.add(consulta);
                consultasPanel.revalidate();
                consultasPanel.repaint();
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao converter o SNS: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Erro inesperado: " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoPesquisaActionPerformed

    private void nomePacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomePacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomePacienteActionPerformed

    private void dataConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataConsultaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dataConsultaActionPerformed

    private void contactoPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactoPacienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactoPacienteActionPerformed

    private void botaoDisponibilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoDisponibilidadeActionPerformed
        DisponibilidadeMedicos disp = new DisponibilidadeMedicos();
        disp.setVisible(true);
    }//GEN-LAST:event_botaoDisponibilidadeActionPerformed

    private void botaoPacientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoPacientesActionPerformed
        pacienteAutoFill();
    }//GEN-LAST:event_botaoPacientesActionPerformed

    public void pacienteAutoFill() {
    try {
        Connection conexao = SqlGeral.DatabaseConnection.getInstance(); // Obtem conexão com a base de dados
        // Obter o número do paciente
        int numero = Integer.parseInt(nSns.getText()); // Converte o texto do campo SNS em um numero

        // Verificar se o paciente existe
        if (SqlFuncionario.verificarPacienteExiste(numero)) {
            // Buscar o nome e contacto do paciente no banco
            String sql = "SELECT Nome, Contacto FROM Paciente WHERE Numero_SNS = ?";
            try (PreparedStatement preparedStatement = conexao.prepareStatement(sql)) {

                preparedStatement.setInt(1, numero);
                try (ResultSet rs = preparedStatement.executeQuery()) {
                    if (rs.next()) {
                        // Preencher os campos da interface
                        nomePaciente.setText(rs.getString("Nome")); // Nome do paciente
                        contactoPaciente.setText(String.valueOf(rs.getInt("Contacto"))); // Contacto do paciente
                    }
                }
            }
        } else {
            // Se o paciente não existir
            JOptionPane.showMessageDialog(this, "Paciente inexistente", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Insira um número de SNS válido", "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao acessar o banco de dados: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        return;
    }
}

    private void botaoMarcarActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            // Obter os valores dos campos da interface
            String nome = nomePaciente.getText();
            String numeroSnsStr = nSns.getText();
            String motivo = motivoConsulta.getText();
            String data = dataConsulta.getText();
            String hora = horaConsulta.getText();
            String idMedicoStr = idMedico.getText();
            String idSalaStr = salaConsulta.getText();
            String contacto = contactoPaciente.getText();

            // Verificar se algum campo está vazio
            if (nome.isEmpty() || numeroSnsStr.isEmpty() || motivo.isEmpty() || data.isEmpty() || hora.isEmpty() || idMedicoStr.isEmpty() || idSalaStr.isEmpty() || contacto.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Preencha todos os campos", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Verificar se o contacto tem 9 dígitos e não começa com 0
            if (contacto.length() != 9 || contacto.charAt(0) == '0') {
                JOptionPane.showMessageDialog(this, "O contacto deve ter exatamente 9 dígitos e não pode começar com 0.", "Erro de Formatação", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //Verificar se o número de sns tem 9 dígitos e não começa com 0
            if (numeroSnsStr.length() != 9 || numeroSnsStr.charAt(0) == '0')  {
                JOptionPane.showMessageDialog(this, "O número de SNS deve ter exatamente 9 dígitos.", "Erro de Formatação", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Converter os valores para os tipos corretos
            int numeroSns = Integer.parseInt(numeroSnsStr);
            int idMedicoInt = Integer.parseInt(idMedicoStr);
            int idSala = Integer.parseInt(idSalaStr);
            int contactoInt = Integer.parseInt(contacto);


            // Verificar se a data e hora da consulta são no futuro
            Date dataHoraConsulta = Main.dataJavaParaSql(data, hora);
            Date dataHoraAtual = new Date();

            if (dataHoraConsulta.before(dataHoraAtual)) {
                JOptionPane.showMessageDialog(this, "A consulta não pode ser marcada no passado.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Chamar o método que cria o paciente caso ele não exista
            SqlFuncionario.criarPacienteMarcacao(Integer.parseInt(numeroSnsStr), nome, Integer.parseInt(contacto));
            SqlMedico.criarRegistro(Integer.parseInt(numeroSnsStr));

            // Chamar o método que cria a consulta
            int idConsultaGerada = SqlFuncionario.criarConsulta(data, hora, motivo, nome, numeroSns,contactoInt, idSala, idMedicoInt);

            // Verificar se a consulta foi criada com sucesso
            if (idConsultaGerada != -1) {
                JOptionPane.showMessageDialog(this, "Consulta marcada com sucesso! ID da Consulta: " + idConsultaGerada, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                // Limpar os campos
                nomePaciente.setText("");
                nSns.setText("");
                motivoConsulta.setText("");
                dataConsulta.setText("");
                horaConsulta.setText("");
                idMedico.setText("");
                salaConsulta.setText("");
                contactoPaciente.setText("");
                // Atualizar o painel verConsultas
                carregarConsultasBaseDeDados();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao marcar a consulta. Tente novamente.", "Erro", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Certifique-se de que os campos numéricos (SNS, Contacto, Médico, Sala) contêm apenas números.", "Erro de Formatação", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro inesperado: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaFuncionario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaFuncionario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barraPesquisa;
    private javax.swing.JButton botaoDisponibilidade;
    private javax.swing.JButton botaoMarcar;
    private javax.swing.JButton botaoMarcarConsultas;
    private javax.swing.JButton botaoPacientes;
    private javax.swing.JButton botaoPesquisa;
    private javax.swing.JButton botaoVerConsultas;
    private javax.swing.JPanel consultasPanel;
    private javax.swing.JTextField contactoPaciente;
    private javax.swing.JFormattedTextField dataConsulta;
    private javax.swing.JFormattedTextField horaConsulta;
    private javax.swing.JTextField idMedico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label;
    private javax.swing.JLayeredPane marcarConsultas;
    private javax.swing.JTextArea motivoConsulta;
    private javax.swing.JTextField nSns;
    private javax.swing.JTextField nomePaciente;
    private javax.swing.JTextField salaConsulta;
    private javax.swing.JLayeredPane verConsultas;
    // End of variables declaration//GEN-END:variables
}
