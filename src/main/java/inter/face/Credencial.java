/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package inter.face;

import medi.flow.*;
import sql.server.CifrarPasswords;
import sql.server.SqlGestor;

import javax.swing.*;

import java.sql.SQLException;

import static medi.flow.Main.getClinica;

/**
 *
 * @author Luis
 */
public class Credencial extends javax.swing.JPanel {
    int idUtilizador;
    /**
     * Creates new form Credencial
     */


    public Credencial(Utilizador utilizador) {
        initComponents(); // Inicializa os componentes da interface

        // Define os valores nos componentes da interface com base nos dados fornecidos
        idCredencial.setText(String.valueOf(utilizador.getId()));
        nomeCredencial.setText(utilizador.getNome());
        password.setText("********");
        funcao.setText(utilizador.getTipoUtilizador());
        idUtilizador = utilizador.getId();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        nomePaciente = new javax.swing.JLabel();
        nSns = new javax.swing.JLabel();
        idCredencial = new javax.swing.JLabel();
        nomeCredencial = new javax.swing.JLabel();
        medico = new javax.swing.JLabel();
        sala = new javax.swing.JLabel();
        password = new javax.swing.JLabel();
        funcao = new javax.swing.JLabel();
        botaoEliminar = new javax.swing.JButton();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 149, 218), 3, true));
        setLayout(new java.awt.GridBagLayout());

        nomePaciente.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        nomePaciente.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nomePaciente.setText("ID:");
        nomePaciente.setMaximumSize(new java.awt.Dimension(120, 30));
        nomePaciente.setMinimumSize(new java.awt.Dimension(120, 30));
        nomePaciente.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(nomePaciente, gridBagConstraints);

        nSns.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        nSns.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        nSns.setText("Nome");
        nSns.setMaximumSize(new java.awt.Dimension(120, 30));
        nSns.setMinimumSize(new java.awt.Dimension(120, 30));
        nSns.setPreferredSize(new java.awt.Dimension(120, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(nSns, gridBagConstraints);

        idCredencial.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        idCredencial.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        idCredencial.setText("xxxxxx");
        idCredencial.setMaximumSize(new java.awt.Dimension(350, 30));
        idCredencial.setMinimumSize(new java.awt.Dimension(350, 30));
        idCredencial.setPreferredSize(new java.awt.Dimension(350, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(idCredencial, gridBagConstraints);

        nomeCredencial.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        nomeCredencial.setText("yyyyy");
        nomeCredencial.setMaximumSize(new java.awt.Dimension(350, 30));
        nomeCredencial.setMinimumSize(new java.awt.Dimension(350, 30));
        nomeCredencial.setPreferredSize(new java.awt.Dimension(350, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(nomeCredencial, gridBagConstraints);

        medico.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        medico.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        medico.setText("Password:");
        medico.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        medico.setMaximumSize(new java.awt.Dimension(80, 30));
        medico.setMinimumSize(new java.awt.Dimension(80, 30));
        medico.setPreferredSize(new java.awt.Dimension(80, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(medico, gridBagConstraints);

        sala.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        sala.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        sala.setText("Função:");
        sala.setMaximumSize(new java.awt.Dimension(80, 30));
        sala.setMinimumSize(new java.awt.Dimension(80, 30));
        sala.setPreferredSize(new java.awt.Dimension(80, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        add(sala, gridBagConstraints);

        password.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        password.setText("zzzzzzz");
        password.setMaximumSize(new java.awt.Dimension(175, 30));
        password.setMinimumSize(new java.awt.Dimension(175, 30));
        password.setPreferredSize(new java.awt.Dimension(175, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(password, gridBagConstraints);

        funcao.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        funcao.setText("wwwww");
        funcao.setMaximumSize(new java.awt.Dimension(175, 30));
        funcao.setMinimumSize(new java.awt.Dimension(175, 30));
        funcao.setPreferredSize(new java.awt.Dimension(175, 30));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(funcao, gridBagConstraints);

        botaoEliminar.setBackground(new java.awt.Color(0, 132, 193));
        botaoEliminar.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        botaoEliminar.setForeground(new java.awt.Color(245, 245, 245));
        botaoEliminar.setText("Eliminar");
        botaoEliminar.setPreferredSize(new java.awt.Dimension(100, 35));
        botaoEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEliminarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        add(botaoEliminar, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void botaoEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEliminarActionPerformed
        try {
            // Create a JPasswordField to input the password
            JPasswordField passwordField = new JPasswordField();
            passwordField.setEchoChar('*');

            // Show the password dialog in the center of the parent window
            int option = JOptionPane.showConfirmDialog(this, passwordField, "Por favor introduza a password de gestor:", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);

            if (option == JOptionPane.OK_OPTION) {
                // Retrieve the input password
                String inputPassword = new String(passwordField.getPassword());

                // Retrieve the actual encrypted password from the database
                String actualEncryptedPassword = SqlGestor.obterPasswordGestor();

                // Encrypt the input password
                String encryptedInputPassword = CifrarPasswords.cifrar(inputPassword);

                // Check if the encrypted input password matches the actual encrypted password
                if (inputPassword != null && encryptedInputPassword.equals(actualEncryptedPassword)) {
                    boolean sucesso = SqlGestor.eliminarUtilizador(idUtilizador);
                    if (sucesso) {
                        getClinica().removeUtilizador(idUtilizador);

                        JPanel parentPanel = (JPanel) this.getParent();
                        parentPanel.remove(this);
                        parentPanel.setPreferredSize(new java.awt.Dimension(parentPanel.getWidth(), parentPanel.getHeight() - 40));
                        parentPanel.revalidate();
                        parentPanel.repaint();

                        JOptionPane.showMessageDialog(this, "Utilizador eliminado com sucesso!");
                    } else {
                        JOptionPane.showMessageDialog(this, "Erro ao eliminar utilizador. Verifique o ID inserido.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Password incorreta. Utilizador não eliminado.", "Falha na autenticação", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erro ao verificar a password: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao cifrar a password: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_botaoEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEliminar;
    private javax.swing.JLabel funcao;
    private javax.swing.JLabel idCredencial;
    private javax.swing.JLabel medico;
    private javax.swing.JLabel nSns;
    private javax.swing.JLabel nomeCredencial;
    private javax.swing.JLabel nomePaciente;
    private javax.swing.JLabel password;
    private javax.swing.JLabel sala;
    // End of variables declaration//GEN-END:variables
}
